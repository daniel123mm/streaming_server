{"version":3,"sources":["api/APIUtils.ts","api/API.ts","api/videoService.ts","components/home.tsx","api/UserService.ts","routes.tsx","components/register.tsx","components/login.tsx","components/streaming.tsx","components/narbar.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HttpHandler","url","option","a","fetch","then","res","ok","json","success","data","catch","error","UserAPI","basePath","login","logout","isLogin","newAccount","VideoAPI","getVideoList","VideoService","api","this","VideoList","video","dash","href","className","name","src","coverImage","alt","style","width","Home","props","videoService","setState","videoList","state","renderVideoList","map","indexOf","maxWidth","id","height","React","Component","UserService","method","body","JSON","stringify","headers","Headers","routes","path","component","exact","userService","handleChange","e","preventDefault","target","value","submitInfo","vaildInput","password","pswRepeat","status","window","location","account","email","htmlFor","type","placeholder","onChange","required","color","onClick","uname","player","videoPlayer","createRef","undefined","current","videojs","controlBar","addChild","ready","label","selected","play","dispose","marginTop","controls","autoPlay","muted","ref","LogoutBtn","LoginBtn","RegisterBtn","Navbar","_userService","home","register","userStatus","message","logoutHandler","loginHandler","registerHandler","statusBtn","App","renderRoutes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f435e8b.chunk.js","sourcesContent":["const HttpHandler = async(url: string, option?:RequestInit):Promise<any> => {\r\n    let data: any;\r\n    await fetch(url, option)\r\n        .then(res => {\r\n            if(res.ok)\r\n                return res.json();\r\n            throw {success:res.ok};\r\n        })\r\n        .then(json => data = json)\r\n        .catch(error => data = error)\r\n    return data;\r\n}\r\n\r\nexport default HttpHandler;\r\n","export class UserAPI {\r\n    basePath: string = \"/api/user\";\r\n    login: string =  \"/login\";  \r\n    logout: string = \"/logout\";\r\n    isLogin: string = \"/isLogin\";\r\n    newAccount: string = \"/newAccount\";\r\n}\r\n\r\nexport class VideoAPI {\r\n    basePath: string = \"/api/video\"\r\n    getVideoList: string = \"/getVideoList\";\r\n}","import HttpHandler from './APIUtils';\r\nimport { VideoAPI } from './API';\r\n\r\nexport interface Video {\r\n    id?:string;\r\n    name: string;\r\n    coverImage: string;\r\n    dash: string;\r\n    describe: string;   \r\n}\r\n\r\nclass VideoService {\r\n    private api: VideoAPI;\r\n\r\n    constructor(){\r\n        this.api = new VideoAPI()\r\n    }\r\n\r\n    getVideoList = async():Promise<Video []> => {\r\n        let url = this.api.basePath + this.api.getVideoList;\r\n        let data = await HttpHandler(url);\r\n        return data;\r\n    }\r\n}\r\n\r\nexport default VideoService;","import React from 'react';\r\nimport VideoService, { Video } from '../api/videoService';\r\n\r\ninterface VProps {\r\n    dash: string;\r\n    name: string;\r\n    coverImage: string;\r\n}\r\n\r\nconst VideoList: React.FC<{video: VProps}> = ({video}) =>{\r\n    let url = \"/streaming?\" + video.dash\r\n    return (\r\n        <a href={url}>\r\n            <div className=\"w3-col l3 m6 w3-margin-bottom\">\r\n                <div className=\"w3-display-container\">\r\n                    <div className=\"w3-display-topleft w3-black w3-padding\">{video.name}</div>\r\n                    <img src={video.coverImage} alt=\"House\" style={{width:\"100%\"}}></img>\r\n                </div>\r\n            </div>\r\n        </a>\r\n    )\r\n};\r\n\r\ninterface HProps{}\r\ninterface HState {\r\n    videoList: Video[]   \r\n}\r\nclass Home extends React.Component<HProps, HState> {\r\n    private videoService: VideoService;\r\n\r\n    constructor(props: HProps){\r\n        super(props);\r\n        this.state = {\r\n            videoList: []\r\n        }\r\n        this.videoService = new VideoService();\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getVideoList();\r\n    }\r\n\r\n    getVideoList = async():Promise<void> => {\r\n        let data = await this.videoService.getVideoList();\r\n        this.setState({videoList: data});\r\n    }\r\n\r\n    render() {\r\n        \r\n        let renderVideoList = this.state.videoList.map((video) => {\r\n            return <VideoList key={this.state.videoList.indexOf(video)} video={video}/>\r\n        })\r\n    \r\n        return (\r\n            <div className=\"home\">\r\n                <header className=\"w3-display-container w3-content w3-wide\" style={{maxWidth:\"1000px\"}} id=\"home\">\r\n                    <img className=\"w3-image\" src=\"images/title.jpg\" alt=\"Architecture\" width=\"1200\" height=\"600\"></img>\r\n                </header>\r\n                <div className=\"w3-content w3-padding\" style={{maxWidth:\"1564px\"}}>\r\n                    <div className=\"w3-container w3-padding-32\" id=\"Videos\">\r\n                        <h3 className=\"w3-border-bottom w3-border-light-grey w3-padding-16\">最新影片</h3>\r\n                    </div>\r\n                    <div className=\"w3-row-padding\">\r\n                        {renderVideoList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import HttpHandler from './APIUtils';\r\nimport { UserAPI } from './API';\r\n\r\nexport interface UserStatusMsg {\r\n    name?: string;\r\n    message?: string;\r\n    success: boolean;\r\n\r\n}\r\n\r\nexport interface User {\r\n    account?: string;\r\n    password?: string;\r\n    pswRepeat?: string;\r\n    name?: string;\r\n    email?: string;\r\n}\r\n\r\nclass UserService {\r\n    private api: UserAPI;\r\n\r\n    constructor(){\r\n        this.api = new UserAPI()\r\n    }\r\n\r\n    login = (data: User):Promise<UserStatusMsg> => {\r\n        let url = this.api.basePath + this.api.login;\r\n        let option = {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n        return HttpHandler(url, option);\r\n    }\r\n\r\n    logout = ():Promise<UserStatusMsg> => {\r\n        let url = this.api.basePath + this.api.logout;\r\n        return HttpHandler(url);\r\n    }\r\n\r\n    isLogin = ():Promise<UserStatusMsg> => {\r\n        let url = this.api.basePath + this.api.isLogin;\r\n        return HttpHandler(url);\r\n    }\r\n\r\n    newAccount = (data: User):Promise<UserStatusMsg> => {\r\n        let url = this.api.basePath + this.api.newAccount;\r\n        let option = {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json'\r\n            })\r\n        }\r\n        return HttpHandler(url, option);\r\n    }\r\n}\r\n\r\nexport default UserService;","import Home from './components/home';\r\nimport Register from './components/register';\r\nimport Login from './components/login';\r\nimport Streaming from './components/streaming';\r\n\r\nconst routes = [\r\n    {\r\n      path: '/',\r\n      component: Home,\r\n      exact: true //can not use subpath ex: /user/123, only /user\r\n    },\r\n    {\r\n      path: '/register',\r\n      component: Register,\r\n      exact: true\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true\r\n    },\r\n    {\r\n        path:'/streaming',\r\n        component: Streaming\r\n    }\r\n];\r\n\r\nexport default routes;","import React from 'react';\r\nimport './form.css'\r\nimport UserService from '../api/UserService';\r\n\r\ninterface RProps {}\r\ninterface RState {\r\n    account?: string;\r\n    password?: string;\r\n    pswRepeat?: string;\r\n    name?: string;\r\n    email?: string;\r\n    status?: string;\r\n}\r\n\r\nclass Register extends React.Component<RProps, RState> {\r\n    private userService: UserService;\r\n\r\n    constructor(props: RProps){\r\n        super(props);\r\n        this.userService = new UserService();\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            pswRepeat: '',\r\n            name: '',\r\n            email:'',\r\n            status:''\r\n        }\r\n    } \r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault()\r\n        this.setState({[e.target.name]: e.target.value}) //html tag <name=\"name\" value=\"value\">\r\n    }\r\n \r\n    submitInfo = async() => {\r\n        let data: any = this.state;\r\n        let vaildInput:number = 0;\r\n        for(var value in data){\r\n            if(data[value] === \"\" && value !== 'status')\r\n                vaildInput = 1;\r\n        }\r\n        if(this.state.password !== this.state.pswRepeat)\r\n            vaildInput = 2;\r\n        switch (vaildInput) {\r\n            case 1: {\r\n                this.setState({status:'您有欄位未填!'});\r\n                break;\r\n            }\r\n            case 2:{\r\n                this.setState({status:'密碼與再次確任密碼不同!'});\r\n                break;\r\n            }\r\n            default:{\r\n                let msg = await this.userService.newAccount(data)\r\n                if(!msg.success)\r\n                    this.setState({status:'此帳號已經存在!'});\r\n                else\r\n                    window.location.href = '/login';\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"formContainer\">\r\n                    <h1>註冊成為<b>You</b>Tobe會員</h1>\r\n                    <hr></hr>\r\n                    <label htmlFor=\"account\"><b>帳號</b></label>\r\n                    <input type=\"text\" placeholder=\"帳號\" name=\"account\" value={this.state.account} onChange={this.handleChange} required></input>\r\n\r\n                    <label htmlFor=\"psw\"><b>密碼</b></label>\r\n                    <input type=\"password\" placeholder=\"密碼\" name=\"password\" value={this.state.password} onChange={this.handleChange} required></input>\r\n\r\n                    <label htmlFor=\"psw-repeat\"><b>確認密碼</b></label>\r\n                    <input type=\"password\" placeholder=\"再次輸入密碼\" name=\"pswRepeat\" value={this.state.pswRepeat} onChange={this.handleChange} required></input>\r\n\r\n                    <label htmlFor=\"name\"><b>使用者名稱</b></label>\r\n                    <input type=\"text\" placeholder=\"名字\" name=\"name\" value={this.state.name} onChange={this.handleChange}  required></input>\r\n\r\n                    <label htmlFor=\"email\"><b>Email</b></label>\r\n                    <input type=\"text\" placeholder=\"Email\" name=\"email\" value={this.state.email} onChange={this.handleChange} required></input>\r\n\r\n                    <label style={{color:\"red\"}}>{this.state.status}</label>\r\n                    <hr></hr>\r\n                    <button onClick={this.submitInfo} className=\"registerbtn\">註冊</button>\r\n                </div>\r\n                <div className=\"signin\">\r\n                    <p>已經是會員? <a href=\"/login\">登入</a>.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Register\r\n","import React from 'react';\r\nimport './form.css';\r\nimport UserService from '../api/UserService';\r\n\r\ninterface LProps {}\r\ninterface LState {\r\n    account?: string;\r\n    password?: string;\r\n    uname?:string;\r\n}\r\n\r\nclass Login extends React.Component<LProps, LState> {\r\n    private userService: UserService;\r\n\r\n    constructor(props: LProps){\r\n        super(props);\r\n        this.userService = new UserService();\r\n        this.state = {\r\n            account: '',\r\n            password: '',\r\n            uname:''\r\n        }\r\n    } \r\n\r\n    handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault()\r\n        this.setState({[e.target.name]: e.target.value}) //html tag <name=\"name\" value=\"value\">\r\n    }\r\n\r\n    submitInfo = async() => {\r\n        let data = this.state;\r\n        let msg = await this.userService.login(data);\r\n        if(!msg.success)\r\n            this.setState({uname:'帳號或密碼錯誤!'});\r\n        else\r\n            window.location.href = '/';\r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <div className=\"loginContainer\">\r\n                <div className=\"loginFormContainer\">\r\n                    <hr></hr>\r\n                    <label htmlFor=\"account\"><b>帳號</b></label>\r\n                    <input type=\"text\" placeholder=\"帳號\" name=\"account\" value={this.state.account} onChange={this.handleChange} required></input>\r\n\r\n                    <label htmlFor=\"psw\"><b>密碼</b></label>\r\n                    <input type=\"password\" placeholder=\"密碼\" name=\"password\" value={this.state.password} onChange={this.handleChange} required></input>\r\n\r\n                    <label style={{color:\"red\"}}>{this.state.uname}</label>\r\n                    <hr></hr>\r\n                    <button className=\"registerbtn\" onClick={this.submitInfo} >登入</button>\r\n                </div>\r\n                <div className=\"signin\">\r\n                    <p>還沒加入會員? <a href=\"/register\">快去註冊</a>.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\ndeclare var videojs: any;\r\n\r\ninterface SProps{}\r\n\r\nclass Streaming extends React.Component<SProps> {\r\n    private player: React.RefObject<any>\r\n    private videoPlayer: any\r\n\r\n    constructor(props: SProps){\r\n        super(props);\r\n        this.player = React.createRef();\r\n        this.videoPlayer = undefined;\r\n    }\r\n\r\n    componentDidMount(){\r\n        var player = this.player.current;\r\n        this.videoPlayer = videojs(player);\r\n        this.videoPlayer.controlBar.addChild('QualitySelector');\r\n        this.videoPlayer.ready(() => {\r\n            this.videoPlayer.src([\r\n                {\r\n                    src: '/dash/big_1080/big.mpd',\r\n                    type: 'application/dash+xml',\r\n                    label: '1080P'\r\n                },\r\n                {\r\n                    src: '/dash/big_720/big.mpd',\r\n                    type: 'application/dash+xml',\r\n                    label: '720P',\r\n                },\r\n                {\r\n                    src: '/dash/big_480/big.mpd',\r\n                    type: 'application/dash+xml',\r\n                    label: '480P',\r\n                    selected: 'true'\r\n                },\r\n                {\r\n                    src: '/dash/big_360/big.mpd',\r\n                    type: 'application/dash+xml',\r\n                    label: '360P'\r\n                }\r\n            ]);\r\n            this.videoPlayer.play();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        if (this.videoPlayer) {\r\n            this.videoPlayer.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const style = {\r\n            maxWidth:\"1200px\",\r\n            marginTop:\"100px\"\r\n        };\r\n\r\n        return (\r\n            <div className=\"w3-main w3-content w3-padding\" style={style}>\r\n                <video className=\"video-js vjs-default-skin vjs-16-9 vjs-big-play-centered\" controls autoPlay muted  ref={this.player}></video>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Streaming;","import React from 'react';\r\nimport UserService, { UserStatusMsg } from '../api/UserService';\r\n\r\ninterface NProps{}\r\ninterface NState{\r\n    userStatus: UserStatusMsg;\r\n}\r\n\r\ninterface GProps{\r\n    onClick: (event: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst LogoutBtn:React.FC<{props:GProps}> = ({props}) => {\r\n        return (\r\n            <div className=\"w3-bar-item w3-right\">\r\n                <button onClick={props.onClick}>登出</button>\r\n            </div>\r\n        )\r\n}\r\n\r\nconst LoginBtn:React.FC<{props:GProps}> = ({props}) => {\r\n    return(\r\n        <div className=\"w3-bar-item w3-right\">\r\n            <button onClick={props.onClick}>登入</button>\r\n        </div>   \r\n    );\r\n}\r\n\r\nconst RegisterBtn:React.FC<{props:GProps}> = ({props}) => {\r\n    return(\r\n        <div className=\"w3-bar-item w3-right\">\r\n            <button onClick={props.onClick}>註冊</button>\r\n        </div>   \r\n    );\r\n}\r\n\r\nclass Navbar extends React.Component<NProps, NState> {\r\n    private _userService: UserService;\r\n\r\n    constructor(props: NProps){\r\n        super(props);\r\n        this._userService = new UserService();\r\n        this.state = {\r\n            userStatus:{\r\n                message:'',\r\n                success:false,\r\n                name:''\r\n            }\r\n        }\r\n    }\r\n\r\n    home = ():void => {\r\n        window.location.href = '/';\r\n    }\r\n\r\n    register = ():void => {\r\n        window.location.href = '/register';\r\n    }\r\n\r\n    login = ():void => {\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    logout = ():void => {\r\n        this._userService.logout();\r\n        window.location.href = '/';\r\n    }\r\n\r\n    isLogin = async() => {\r\n        let status = await this._userService.isLogin();\r\n        this.setState({userStatus: status});\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.isLogin();\r\n    }\r\n    \r\n    render() {\r\n        let statusBtn = () => {\r\n            if(this.state.userStatus.success){\r\n                let logoutHandler:GProps = {onClick: this.logout}               \r\n                return <LogoutBtn props={logoutHandler}/>\r\n            }else{\r\n                let loginHandler:GProps = {onClick: this.login}  \r\n                let registerHandler: GProps = {onClick: this.register}             \r\n                return (\r\n                    <>\r\n                        <LoginBtn props={loginHandler} />\r\n                        <RegisterBtn props={registerHandler} />\r\n                    </>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"w3-top\">\r\n                <div className=\"w3-bar w3-white w3-wide w3-padding w3-card\">\r\n                    <div className=\"w3-bar-item w3-button\" onClick={this.home}>\r\n                        <img src=\"/images/logo.png\" width=\"30\" height=\"20\" alt=\"no pic\" style={{width:\"auto\"}}></img>\r\n                        <b>You</b>Tobe\r\n                    </div>\r\n                    {statusBtn()}\r\n                    <div className=\"w3-bar-item w3-right\">\r\n                        <label htmlFor=\"user\">{this.state.userStatus.name}</label>\r\n                    </div>                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport { renderRoutes } from 'react-router-config';\nimport routes from './routes';\nimport Navbar from './components/narbar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      {renderRoutes(routes)}\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n \n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Switch>\n        <App />\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}